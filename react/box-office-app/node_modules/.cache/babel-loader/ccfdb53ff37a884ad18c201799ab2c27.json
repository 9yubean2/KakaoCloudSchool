{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/KakaoCloudSchool/react/box-office-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Lists from './components/Lists';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [movieList, setMovieList] = useState([{\n    id: 'sample',\n    title: 'title1',\n    posterPath: '/pIkRyD18kl4FhoCNQuWxWu5cBLM.jpg',\n    releaseDate: '2022-04-22',\n    average: '4.3'\n  }]);\n  const option = {\n    url: 'https://api.themoviedb.org/3/movie/popular',\n    method: 'GET',\n    params: {\n      api_key: '84dcca61f9944a6e09e7dfcf27364b36'\n    },\n    responseType: 'json'\n  };\n  let resultList = [];\n\n  const search = () => {\n    axios(option).then(function (response) {\n      let results = response.data.results;\n      results.map(result => {\n        let newList = {\n          id: `${result.id}`,\n          //유니크한 값을 표현하기 위해\n          title: `${result.title}`,\n          posterPath: `${result.poster_path}`,\n          releaseDate: `${result.release_date}`,\n          average: `${result.vote_average}`\n        };\n        console.log(newList);\n        resultList.push(newList);\n      });\n      console.log(resultList);\n    }).catch(function () {\n      alert('Fail to Loading..');\n    }).finally(function () {\n      alert('Done!');\n      console.log(movieList);\n      console.log(resultList);\n      setMovieList(resultList); // movieList.map((movie)=>{\n      //   console.log(movie.title);\n      // })\n    });\n  };\n\n  const queryHandler = e => {\n    setQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center w-screen h-screen bg-[#ddedc0]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full p-6 m-4 bg-white rounded shadow \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-slate-900\",\n          children: \"MOVIE LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        movieList: movieList,\n        setMovieList: setMovieList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eXiU1Y4t/B5u+fs3jLzF4WdY2UM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","Lists","App","query","setQuery","movieList","setMovieList","id","title","posterPath","releaseDate","average","option","url","method","params","api_key","responseType","resultList","search","then","response","results","data","map","result","newList","poster_path","release_date","vote_average","console","log","push","catch","alert","finally","queryHandler","e","target","value"],"sources":["/Users/Dia/Desktop/KakaoCloudSchool/react/box-office-app/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Lists from './components/Lists';\n\nexport default function App() {\n\n  const [query, setQuery] = useState(\"\");\n\n  const [movieList,setMovieList]= useState([\n    {\n      id:'sample',\n      title:'title1',\n      posterPath:'/pIkRyD18kl4FhoCNQuWxWu5cBLM.jpg',\n      releaseDate:'2022-04-22',\n      average:'4.3'\n    },\n  ]);\n\n \n  const option = {\n\n    url:'https://api.themoviedb.org/3/movie/popular',\n    method:'GET',\n    params:{api_key:'84dcca61f9944a6e09e7dfcf27364b36'},\n    responseType:'json'\n\n  }\n\n  let resultList = [];\n\n  const search = () =>{\n    \n    axios(option)\n    .then(function(response){\n      let results = response.data.results;\n\n      results.map((result)=>{\n        let newList = {\n          id: `${result.id}`,//유니크한 값을 표현하기 위해\n          title: `${result.title}`,\n          posterPath:`${result.poster_path}`,\n          releaseDate:`${result.release_date}`,\n          average:`${result.vote_average}`\n        }\n        console.log(newList);\n        resultList.push(newList);\n      })\n\n      console.log(resultList);\n      \n      \n    })\n    .catch(function(){\n      alert('Fail to Loading..');\n    })\n    .finally(function(){\n      alert('Done!');\n      console.log(movieList);\n      \n      console.log(resultList);\n      setMovieList(resultList); \n      // movieList.map((movie)=>{\n      //   console.log(movie.title);\n      // })\n    })\n  }\n\n\n  const queryHandler = (e) =>{\n    setQuery(e.target.value);\n  }  \n\n\n  return (\n    \n    <div className=\"flex items-center justify-center w-screen h-screen bg-[#ddedc0]\">\n      {/* <div className=\"w-full p-6 m-4 bg-white rounded shadow md:w-3/4 md:max-w-lg lg:w-3/4 lg: max-w-lg\"> */}\n      <div className=\"w-full p-6 m-4 bg-white rounded shadow \">\n        <div className=\"flex justify-between mb-3\">\n            <h1 className=\"text-2xl font-bold text-slate-900\">MOVIE LIST</h1>\n        </div>\n        <input type='date'/><button></button>\n        <Lists movieList={movieList}\n                 setMovieList={setMovieList}/>  \n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM,CAACK,SAAD,EAAWC,YAAX,IAA0BN,QAAQ,CAAC,CACvC;IACEO,EAAE,EAAC,QADL;IAEEC,KAAK,EAAC,QAFR;IAGEC,UAAU,EAAC,kCAHb;IAIEC,WAAW,EAAC,YAJd;IAKEC,OAAO,EAAC;EALV,CADuC,CAAD,CAAxC;EAWA,MAAMC,MAAM,GAAG;IAEbC,GAAG,EAAC,4CAFS;IAGbC,MAAM,EAAC,KAHM;IAIbC,MAAM,EAAC;MAACC,OAAO,EAAC;IAAT,CAJM;IAKbC,YAAY,EAAC;EALA,CAAf;EASA,IAAIC,UAAU,GAAG,EAAjB;;EAEA,MAAMC,MAAM,GAAG,MAAK;IAElBrB,KAAK,CAACc,MAAD,CAAL,CACCQ,IADD,CACM,UAASC,QAAT,EAAkB;MACtB,IAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcD,OAA5B;MAEAA,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAU;QACpB,IAAIC,OAAO,GAAG;UACZnB,EAAE,EAAG,GAAEkB,MAAM,CAAClB,EAAG,EADL;UACO;UACnBC,KAAK,EAAG,GAAEiB,MAAM,CAACjB,KAAM,EAFX;UAGZC,UAAU,EAAE,GAAEgB,MAAM,CAACE,WAAY,EAHrB;UAIZjB,WAAW,EAAE,GAAEe,MAAM,CAACG,YAAa,EAJvB;UAKZjB,OAAO,EAAE,GAAEc,MAAM,CAACI,YAAa;QALnB,CAAd;QAOAC,OAAO,CAACC,GAAR,CAAYL,OAAZ;QACAR,UAAU,CAACc,IAAX,CAAgBN,OAAhB;MACD,CAVD;MAYAI,OAAO,CAACC,GAAR,CAAYb,UAAZ;IAGD,CAnBD,EAoBCe,KApBD,CAoBO,YAAU;MACfC,KAAK,CAAC,mBAAD,CAAL;IACD,CAtBD,EAuBCC,OAvBD,CAuBS,YAAU;MACjBD,KAAK,CAAC,OAAD,CAAL;MACAJ,OAAO,CAACC,GAAR,CAAY1B,SAAZ;MAEAyB,OAAO,CAACC,GAAR,CAAYb,UAAZ;MACAZ,YAAY,CAACY,UAAD,CAAZ,CALiB,CAMjB;MACA;MACA;IACD,CAhCD;EAiCD,CAnCD;;EAsCA,MAAMkB,YAAY,GAAIC,CAAD,IAAM;IACzBjC,QAAQ,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACD,CAFD;;EAKA,oBAEE;IAAK,SAAS,EAAC,iEAAf;IAAA,uBAEE;MAAK,SAAS,EAAC,yCAAf;MAAA,wBACE;QAAK,SAAS,EAAC,2BAAf;QAAA,uBACI;UAAI,SAAS,EAAC,mCAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QAJF,eAIsB;QAAA;QAAA;QAAA;MAAA,QAJtB,eAKE,QAAC,KAAD;QAAO,SAAS,EAAElC,SAAlB;QACS,YAAY,EAAEC;MADvB;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QAFF;AAcD;;GAnFuBJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}