{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/my-todo-app/src/components/Lists.js\";\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport List from './components/List'; //구조 분해 할당을 이용\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n\n  const checkClick = id => {\n    const updateTodo = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n\n      return data;\n    });\n    setTodoData(updateTodo);\n  };\n\n  const deleteClick = id => {\n    //해당 아이디에 대한 할일 목록을 지워야 해요\n    if (window.confirm(\"Really Delete?\")) {\n      const newTodoData = todoData.filter(data => data.id !== id);\n      setTodoData(newTodoData);\n    } else {\n      return;\n    }\n  };\n\n  const handleDrop = e => {\n    //만약에 drop end한 위치가 DragDropContext밖이면 return\n    if (!e.destination) return; // copy todoData\n\n    const updateTodo = todoData; //drag되는 요소 삭제\n\n    const [reorder] = updateTodo.splice(e.source.index, 1); //drop되는 위치에 삽입\n\n    updateTodo.splice(e.destination.index, 0, reorder); //순서 바꾼 배열로 setTodoData \n\n    setTodoData(updateTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDrop,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"to-do\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n              id: data,\n              title: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","DragDropContext","Draggable","Droppable","List","Lists","todoData","setTodoData","checkClick","id","updateTodo","map","data","completed","deleteClick","window","confirm","newTodoData","filter","handleDrop","e","destination","reorder","splice","source","index","provided","droppableProps","innerRef","toString","snapshot","title","placeholder"],"sources":["/Users/Dia/Desktop/my-todo-app/src/components/Lists.js"],"sourcesContent":["import React from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport List from './components/List'\n\n//구조 분해 할당을 이용\nexport default function Lists({todoData,setTodoData}) {\n\n\n    const checkClick = (id) => {\n        const updateTodo = todoData.map((data) => {\n            if (data.id === id) {\n                data.completed = !data.completed\n            }\n            return data;\n        });\n    \n        setTodoData(updateTodo);\n    }\n\n    const deleteClick = (id) => {\n        //해당 아이디에 대한 할일 목록을 지워야 해요\n        if(window.confirm(\"Really Delete?\")){\n            const newTodoData = todoData.filter((data)=> data.id !== id)\n        \n            setTodoData(newTodoData);\n        }\n        else{\n            return;\n        }\n        \n        \n    }\n\n    const handleDrop=(e)=>{\n        //만약에 drop end한 위치가 DragDropContext밖이면 return\n        if(!e.destination) return;\n\n        // copy todoData\n        const updateTodo = todoData;\n\n        //drag되는 요소 삭제\n        const [reorder] = updateTodo.splice(e.source.index,1);\n\n        //drop되는 위치에 삽입\n        updateTodo.splice(e.destination.index,0,reorder);\n\n        //순서 바꾼 배열로 setTodoData \n        setTodoData(updateTodo);\n\n    }\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={handleDrop}>\n                <Droppable droppableId='to-do'>\n                    {(provided)=>(\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                        {todoData.map((data,index) => (\n                            <Draggable \n                                key={data.id}\n                                draggableId={data.id.toString()}\n                                index={index}>\n                                    {(provided,snapshot)=>(\n                                        <List id={data}\n                                        title={title}\n                                        />\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;;AACA,eAAe,SAASC,KAAT,OAAuC;EAAA,IAAxB;IAACC,QAAD;IAAUC;EAAV,CAAwB;;EAGlD,MAAMC,UAAU,GAAIC,EAAD,IAAQ;IACvB,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,IAAD,IAAU;MACtC,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;QAChBG,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;MACH;;MACD,OAAOD,IAAP;IACH,CALkB,CAAnB;IAOAL,WAAW,CAACG,UAAD,CAAX;EACH,CATD;;EAWA,MAAMI,WAAW,GAAIL,EAAD,IAAQ;IACxB;IACA,IAAGM,MAAM,CAACC,OAAP,CAAe,gBAAf,CAAH,EAAoC;MAChC,MAAMC,WAAW,GAAGX,QAAQ,CAACY,MAAT,CAAiBN,IAAD,IAASA,IAAI,CAACH,EAAL,KAAYA,EAArC,CAApB;MAEAF,WAAW,CAACU,WAAD,CAAX;IACH,CAJD,MAKI;MACA;IACH;EAGJ,CAZD;;EAcA,MAAME,UAAU,GAAEC,CAAD,IAAK;IAClB;IACA,IAAG,CAACA,CAAC,CAACC,WAAN,EAAmB,OAFD,CAIlB;;IACA,MAAMX,UAAU,GAAGJ,QAAnB,CALkB,CAOlB;;IACA,MAAM,CAACgB,OAAD,IAAYZ,UAAU,CAACa,MAAX,CAAkBH,CAAC,CAACI,MAAF,CAASC,KAA3B,EAAiC,CAAjC,CAAlB,CARkB,CAUlB;;IACAf,UAAU,CAACa,MAAX,CAAkBH,CAAC,CAACC,WAAF,CAAcI,KAAhC,EAAsC,CAAtC,EAAwCH,OAAxC,EAXkB,CAalB;;IACAf,WAAW,CAACG,UAAD,CAAX;EAEH,CAhBD;;EAkBA,oBACI;IAAA,uBACI,QAAC,eAAD;MAAiB,SAAS,EAAES,UAA5B;MAAA,uBACI,QAAC,SAAD;QAAW,WAAW,EAAC,OAAvB;QAAA,UACMO,QAAD,iBACG,oBAASA,QAAQ,CAACC,cAAlB;UAAkC,GAAG,EAAED,QAAQ,CAACE,QAAhD;UAAA,WACCtB,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAMa,KAAN,kBACV,QAAC,SAAD;YAEI,WAAW,EAAEb,IAAI,CAACH,EAAL,CAAQoB,QAAR,EAFjB;YAGI,KAAK,EAAEJ,KAHX;YAAA,UAIS,CAACC,QAAD,EAAUI,QAAV,kBACG,QAAC,IAAD;cAAM,EAAE,EAAElB,IAAV;cACA,KAAK,EAAEmB;YADP;cAAA;cAAA;cAAA;YAAA;UALZ,GACSnB,IAAI,CAACH,EADd;YAAA;YAAA;YAAA;UAAA,QADH,CADD,EAaCiB,QAAQ,CAACM,WAbV;QAAA;UAAA;UAAA;UAAA;QAAA;MAFR;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH;KAvEuB3B,K"},"metadata":{},"sourceType":"module"}